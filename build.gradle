plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

ext {
	querydslVersion = "5.0.0"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'mysql:mysql-connector-java:8.0.33'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def generated = "src/main/generated"

sourceSets {
	main {
		java {
			srcDirs += [generated]
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

querydsl {
	jpa = true
	querydslSourcesDir = generated
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.annotationProcessor
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom annotationProcessor
}